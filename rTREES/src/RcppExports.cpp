// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// number_of_cores
int number_of_cores();
RcppExport SEXP _rTREES_number_of_cores() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(number_of_cores());
    return rcpp_result_gen;
END_RCPP
}
// rTREES
Rcpp::List rTREES(Rcpp::DataFrame env_driver, Rcpp::DataFrame base_parameters, Rcpp::List root_shoot_soil, Rcpp::LogicalVector which_out, bool verbosity, int softerror_max);
RcppExport SEXP _rTREES_rTREES(SEXP env_driverSEXP, SEXP base_parametersSEXP, SEXP root_shoot_soilSEXP, SEXP which_outSEXP, SEXP verbositySEXP, SEXP softerror_maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type env_driver(env_driverSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type base_parameters(base_parametersSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type root_shoot_soil(root_shoot_soilSEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type which_out(which_outSEXP);
    Rcpp::traits::input_parameter< bool >::type verbosity(verbositySEXP);
    Rcpp::traits::input_parameter< int >::type softerror_max(softerror_maxSEXP);
    rcpp_result_gen = Rcpp::wrap(rTREES(env_driver, base_parameters, root_shoot_soil, which_out, verbosity, softerror_max));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rTREES_number_of_cores", (DL_FUNC) &_rTREES_number_of_cores, 0},
    {"_rTREES_rTREES", (DL_FUNC) &_rTREES_rTREES, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_rTREES(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
